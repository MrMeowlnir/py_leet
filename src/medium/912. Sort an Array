class Solution:
    def sortArray(self, nums: List[int]) -> List[int]:
        def insert_sort(arr):
            for i in range(1, len(arr)):
                x = arr[i]
                j = i

                while j > 0 and arr[j - 1] > x:
                    arr[j] = arr[j - 1]
                    j -= 1
            
                arr[j] = x

            return arr
        
        n = len(nums)
        if n == 0:
            return []
        
        if n < 64:
            return insert_sort(nums)

        self.merge_sort(nums, 0, len(nums) - 1)
        return nums

    def merge_sort(self, nums, l, r):
        if l >= r:
            return
        m = (l + r) // 2
        self.merge_sort(nums, l, m)
        self.merge_sort(nums, m + 1, r)

        self.merge(nums, l, m, r)

    def merge(self, nums, l, m, r):
        l1, l2 = m - l + 1, r - m

        left, right = nums[l:l+l1], nums[m+1:m+1+l2]
        i,j,k = 0,0,l

        while i < l1 and j < l2:
            if left[i] <= right[j]:
                nums[k] = left[i]
                i += 1
            else:
                nums[k] = right[j]
                j += 1
            k += 1

        while i < l1:
            nums[k] = left[i]
            i += 1
            k += 1
        
        while j < l2:
            nums[k] = right[j]
            j += 1
            k += 1
